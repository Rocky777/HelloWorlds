package com.vs.vsadmin;

import java.util.Collection;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.data.Property;
import com.vaadin.event.MouseEvents;
import com.vaadin.server.ThemeResource;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.FormLayout;
import com.vaadin.ui.Image;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Notification.Type;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;
import com.vs.service.VSAdminService;
import com.vs.service.VSMenu;

public class MainMenuGen extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;
	private Table mainMenuTable;
	private TextField mainMenuItem;
	VSAdminService vsAdminService;
	
	public void setVsAdminService(VSAdminService vsAdminService) {
		this.vsAdminService = vsAdminService;
	}

	public MainMenuGen() {
		System.out.println("------------MainmenuGen Constructor----------");
		buildMainLayout();
		setCompositionRoot(mainLayout);
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		mainLayout.addComponent(addnewMenuHirarchyButton());
		return mainLayout;
	}

	
	public FormLayout addnewMenuHirarchyButton() {
		FormLayout formLayout = new FormLayout();
		mainMenuItem = new TextField("New Menu Item");
		Button addMainMenuItem = new Button("Add Main Menu Item");
		mainMenuTable = new Table();
		mainMenuTable.setImmediate(true);
		addMainMenuItem.addListener(Button.ClickEvent.class, this, "addMainMenuItemAction");
		mainMenuTable.addContainerProperty("Menu Item", String.class, null);
		mainMenuTable.addContainerProperty("", Image.class, null);
		Button saveMainMenuItem =  new Button("Save Main Menu Item");
		formLayout.addComponents(mainMenuItem,addMainMenuItem,mainMenuTable,saveMainMenuItem);
		saveMainMenuItem.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(Button.ClickEvent event) {
				Collection<?> itemIds = mainMenuTable.getItemIds();
				Iterator<?> itemIdsIterator = itemIds.iterator();
				Set<VSMenu> vsMenus = new HashSet<VSMenu>();
				while (itemIdsIterator.hasNext()) {
					Object itemId = (Object) itemIdsIterator.next();
					Item item = mainMenuTable.getItem(itemId);
					Property property = item.getItemProperty("Menu Item");
					System.out.println(property.getValue());
					VSMenu vsMenu = new VSMenu();
					vsMenu.setMainMenu(property.getValue().toString());
					vsMenus.add(vsMenu);
				}
			Boolean status = vsAdminService.saveMainMenuItems(vsMenus);
			if(status){
				mainMenuTable.removeAllItems();
			}
			Notification.show(status.toString(),Type.TRAY_NOTIFICATION);
			}
		});
	
		mainLayout.setStyleName("mainMenuLayout");
		return formLayout;
	}
	public void addMainMenuItemAction(Button.ClickEvent event){
		int tableSize = mainMenuTable.size();
		System.out.println("////////");
		Image image = new Image();
		image.setImmediate(true);
		image.setStyleName("closeIcon");
		image.setSource(new ThemeResource("images/close.ico"));
		image.addClickListener(new MouseEvents.ClickListener() {

			@Override
			public void click(com.vaadin.event.MouseEvents.ClickEvent event) {
				System.out.println(event.getComponent().getId());
				Image object = (Image) event.getComponent();
				mainMenuTable.removeItem(object.getData());				
			}
		});
		Object object = mainMenuTable.addItem(new Object[]{mainMenuItem.getValue(),image}, tableSize++);
		image.setData(object);
	}
}
