package com.vs.vsadmin;

import java.util.Collection;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.data.Property;
import com.vaadin.event.MouseEvents;
import com.vaadin.server.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.FormLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Image;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Notification.Type;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;
import com.vs.service.VSAdminService;
import com.vs.service.VSProductAttribute;

public class VSAttributeUiGen extends CustomComponent {
	@AutoGenerated
	private FormLayout mainLayout;
	@AutoGenerated
	private Button saveAttributebutton;
	@AutoGenerated
	private Table attributeValuesTable;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	private Button button_3;
	@AutoGenerated
	private TextField textField_3;
	@AutoGenerated
	private Label label_2;
	@AutoGenerated
	private TextField textField_2;
	private VSAdminService vsAdminService;
	public VSAttributeUiGen(VSAdminService vsAdminService) {
		this.vsAdminService = vsAdminService;
		buildMainLayout();
		setCompositionRoot(mainLayout);
	}

	@AutoGenerated
	private FormLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new FormLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// textField_2
		textField_2 = new TextField();
		textField_2.setCaption("New Attribute");
		textField_2.setImmediate(false);
		textField_2.setWidth("-1px");
		textField_2.setHeight("-1px");
		mainLayout.addComponent(textField_2);
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		mainLayout.addComponent(horizontalLayout_1);
		
		// attributeValuesTable
		attributeValuesTable = new Table();
		attributeValuesTable.setImmediate(true);
		attributeValuesTable.setWidth("100.0%");
		attributeValuesTable.setHeight("-1px");
		
		button_3.addClickListener(new ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {

				int tableSize = attributeValuesTable.size();
				Image image = new Image();
				image.setImmediate(true);
				image.setStyleName("closeIcon");
				image.setSource(new ThemeResource("images/close.ico"));
				image.addClickListener(new MouseEvents.ClickListener() {

					@Override
					public void click(com.vaadin.event.MouseEvents.ClickEvent event) {
						System.out.println(event.getComponent().getId());
						Image object = (Image) event.getComponent();
						attributeValuesTable.removeItem(object.getData());				
					}
				});
				Object object = attributeValuesTable.addItem(new Object[]{textField_3.getValue(),image}, tableSize++);
				image.setData(object);

			}
		});
		attributeValuesTable.addContainerProperty("Attruibute Values", String.class, null);
		attributeValuesTable.addContainerProperty("", Image.class, null);
		mainLayout.addComponent(attributeValuesTable);
		
		// saveAttributebutton
		saveAttributebutton = new Button();
		saveAttributebutton.setCaption("Save Attribute");
		saveAttributebutton.setImmediate(false);
		saveAttributebutton.setWidth("-1px");
		saveAttributebutton.setHeight("-1px");
		
		
		saveAttributebutton.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(Button.ClickEvent event) {
				Collection<?> itemIds = attributeValuesTable.getItemIds();
				Iterator<?> itemIdsIterator = itemIds.iterator();
				Set<String> attributeValues = new HashSet<String>();
				while (itemIdsIterator.hasNext()) {
					Object itemId = (Object) itemIdsIterator.next();
					Item item = attributeValuesTable.getItem(itemId);
					Property property = item.getItemProperty("Attruibute Values");
					System.out.println(property.getValue());
					attributeValues.add(property.getValue().toString());
				}
				VSProductAttribute vsProductAttribute = new VSProductAttribute();
				vsProductAttribute.setAttributeName(textField_2.getValue());
				vsProductAttribute.setAttriubuteValues(attributeValues);
				boolean status = vsAdminService.saveAttribute(vsProductAttribute);
				if(status){
					attributeValuesTable.removeAllItems();
					textField_2.setValue("");
					textField_3.setValue("");
				}
				Notification.show("Attribute Saved Status "+status, Type.TRAY_NOTIFICATION);
			}
		});
		mainLayout.addComponent(saveAttributebutton);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setMargin(false);
		horizontalLayout_1.setSpacing(true);
		
		// label_2
		label_2 = new Label();
		label_2.setImmediate(false);
		label_2.setWidth("-1px");
		label_2.setHeight("-1px");
		label_2.setValue("New AttributeValue");
		horizontalLayout_1.addComponent(label_2);
		
		// textField_3
		textField_3 = new TextField();
		textField_3.setImmediate(false);
		textField_3.setWidth("-1px");
		textField_3.setHeight("-1px");
		horizontalLayout_1.addComponent(textField_3);
		
		// button_3
		button_3 = new Button();
		button_3.setCaption("Add Attribute Value");
		button_3.setImmediate(false);
		button_3.setWidth("-1px");
		button_3.setHeight("-1px");
		horizontalLayout_1.addComponent(button_3);
		
		return horizontalLayout_1;
	}

}
